`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 12/07/2022 04:41:54 PM
// Design Name: 
// Module Name: InstructionMem
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module InstructionMem(
    input [31:0] Address,
    output [31:0] Instruction
    );
    reg [7:0] mem [0: 1024];
    initial 
       begin
       
       /*
        .text
           main:
               addi $t0 ,$zero, 10
               addi $t1 ,$zero, 5
               add $t2 ,$t0, $t1
               beq $t2, 5 ,case5
               beq $t2, 10 ,case10
               beq $t2, 15 ,case15
           case5:
               addi $t2,$zero,1
               j case10    
           case10:
               addi $t2,$zero,2
               j returnMain
           case15:
               addi $t2,$zero,3
               j returnMain
           
           returnMain:
               bne $t0, 5, EXIT
               beq $t2, 2, IF
               bne $t2, 1, EXIT
               j IF
           IF:
               subi $t0, $t2, 1
               j EXIT
           EXIT:
               li $v0, 10
               syscall
       */
            mem[32'd0] = 8'b00100000;
            mem[32'd1] = 8'b00001000;
            mem[32'd2] = 8'b00000000;
            mem[32'd3] = 8'b00001010;
            
            mem[32'd4] = 8'b00100000;
            mem[32'd5] = 8'b00001001;
            mem[32'd6] = 8'b00000000;
            mem[32'd7] = 8'b00000101;
            
            mem[32'd8] = 8'b00000001;
            mem[32'd9] = 8'b00001001;
            mem[32'd10] = 8'b01010000;
            mem[32'd11] = 8'b00100000;
            
            mem[32'd12] = 8'b00100000;
            mem[32'd13] = 8'b00000001;
            mem[32'd14] = 8'b00000000;
            mem[32'd15] = 8'b00000101;
            
            mem[32'd16] = 8'b00010000;
            mem[32'd17] = 8'b00101010;
            mem[32'd18] = 8'b00000000;
            mem[32'd19] = 8'b00000100;
            
            mem[32'd20] = 8'b00100000;
            mem[32'd21] = 8'b00000001;
            mem[32'd22] = 8'b00000000;
            mem[32'd23] = 8'b00001010;
            
            mem[32'd24] = 8'b00010000;
            mem[32'd25] = 8'b00101010;
            mem[32'd26] = 8'b00000000;
            mem[32'd27] = 8'b00000100;
            
            mem[32'd28] = 8'b00100000;
            mem[32'd29] = 8'b00000001;
            mem[32'd30] = 8'b00000000;
            mem[32'd31] = 8'b00001111;
            
            mem[32'd32] = 8'b00010000;
            mem[32'd33] = 8'b00101010;
            mem[32'd34] = 8'b00000000;
            mem[32'd35] = 8'b00000100;
            
            mem[32'd36] = 8'b00100000;
            mem[32'd37] = 8'b00001010;
            mem[32'd38] = 8'b00000000;
            mem[32'd39] = 8'b00000001;
            
            mem[32'd40] = 8'b00001000; 
            mem[32'd41] = 8'b00010000;
            mem[32'd42] = 8'b00000000;
            mem[32'd43] = 8'b00001011;
            
            mem[32'd44] = 8'b00100000;
            mem[32'd45] = 8'b00001010;
            mem[32'd46] = 8'b00000000;
            mem[32'd47] = 8'b00000010;
            
            mem[32'd48] = 8'b00001000;
            mem[32'd49] = 8'b00010000;
            mem[32'd50] = 8'b00000000;
            mem[32'd51] = 8'b00001111;
            
            mem[32'd52] = 8'b00100000;
            mem[32'd53] = 8'b00001010;
            mem[32'd54] = 8'b00000000;
            mem[32'd55] = 8'b00000011;
            
            mem[32'd56] = 8'b00001000;
            mem[32'd57] = 8'b00010000;
            mem[32'd58] = 8'b00000000;
            mem[32'd59] = 8'b00001111;
            
            mem[32'd60] = 8'b00100000;
            mem[32'd61] = 8'b00000001;
            mem[32'd62] = 8'b00000000;
            mem[32'd63] = 8'b00000101;
            
            mem[32'd64] = 8'b00010100;
            mem[32'd65] = 8'b00101000;
            mem[32'd66] = 8'b00000000;
            mem[32'd67] = 8'b00001000;
            
            mem[32'd68] = 8'b00100000;
            mem[32'd69] = 8'b00000001;
            mem[32'd70] = 8'b00000000;
            mem[32'd71] = 8'b00000010;
            
            mem[32'd72] = 8'b00010000;
            mem[32'd73] = 8'b00101010;
            mem[32'd74] = 8'b00000000;
            mem[32'd75] = 8'b00000011;
            
            mem[32'd76] = 8'b00100000;
            mem[32'd77] = 8'b00000001;
            mem[32'd78] = 8'b00000000;
            mem[32'd79] = 8'b00000001;
            
            mem[32'd80] = 8'b00010100;
            mem[32'd81] = 8'b00101010;
            mem[32'd82] = 8'b00000000;
            mem[32'd83] = 8'b00000100;
            
            mem[32'd84] = 8'b00001000;
            mem[32'd85] = 8'b00010000;
            mem[32'd86] = 8'b00000000;
            mem[32'd87] = 8'b00010110;
            
            mem[32'd88] = 8'b00100000;
            mem[32'd89] = 8'b00000001;
            mem[32'd90] = 8'b00000000;
            mem[32'd91] = 8'b00000001;
            
            mem[32'd92] = 8'b00000001;
            mem[32'd93] = 8'b01000001;
            mem[32'd94] = 8'b01000000;
            mem[32'd95] = 8'b00100010;
            
            mem[32'd96] = 8'b00001000;
            mem[32'd97] = 8'b00010000;
            mem[32'd98] = 8'b00000000;
            mem[32'd99] = 8'b00011001;
            
            mem[32'd100] = 8'b00100100;
            mem[32'd101] = 8'b00000010;
            mem[32'd102] = 8'b00000000;
            mem[32'd103] = 8'b00001010;
            
            mem[32'd104] = 8'b00000000;
            mem[32'd105] = 8'b00000000;
            mem[32'd106] = 8'b00000000;
            mem[32'd107] = 8'b00001100;
                       
        end
        
        assign Instruction  = {mem[Address],mem[Address+1],mem[Address+2],mem[Address+3]};
        
    endmodule
